{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\react\\\\test\\\\test\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { TaskData } from \"./components/Context\";\nimport CreateTask from \"./components/CreateTask\";\nimport Header from \"./components/Header\";\nimport Note from \"./components/Note\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    task,\n    setTask,\n    isLoading,\n    setIsLoading\n  } = useContext(TaskData); //delete the task\n\n  const deleteHandler = id => {\n    setTask(preVal => {\n      return [...preVal.filter((val, idx) => idx !== id)];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateTask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskList\",\n        children: task.map((val, idx) => {\n          return /*#__PURE__*/_jsxDEV(Note, {\n            id: idx,\n            title: val.title,\n            content: val.content,\n            onDelete: deleteHandler\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(App, \"HQGpfUhMTgzWT896XUxyriA6oJI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/project/react/test/test/src/App.js"],"names":["useContext","TaskData","CreateTask","Header","Note","App","task","setTask","isLoading","setIsLoading","deleteHandler","id","preVal","filter","val","idx","map","title","content"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,OAAN;AAAcC,IAAAA,SAAd;AAAwBC,IAAAA;AAAxB,MAAwCT,UAAU,CAACC,QAAD,CAAxD,CADa,CAGb;;AACA,QAAMS,aAAa,GAAEC,EAAD,IAAM;AACxBJ,IAAAA,OAAO,CAAEK,MAAD,IAAU;AAChB,aAAO,CAAC,GAAGA,MAAM,CAACC,MAAP,CAAc,CAACC,GAAD,EAAKC,GAAL,KAAWA,GAAG,KAAGJ,EAA/B,CAAJ,CAAP;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,sBACI;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGG,CAACA,SAAD,iBACC;AAAA,8BACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAEEF,IAAI,CAACU,GAAL,CAAS,CAACF,GAAD,EAAKC,GAAL,KAAW;AAClB,8BACE,QAAC,IAAD;AAEE,YAAA,EAAE,EAAEA,GAFN;AAGE,YAAA,KAAK,EAAED,GAAG,CAACG,KAHb;AAIE,YAAA,OAAO,EAAEH,GAAG,CAACI,OAJf;AAKA,YAAA,QAAQ,EAAER;AALV,aACOK,GADP;AAAA;AAAA;AAAA;AAAA,kBADF;AASH,SAVC;AAFF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBAJJ;AAAA,kBADJ;AA4BD;;GAtCQV,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import { useContext } from \"react\";\nimport { TaskData } from \"./components/Context\";\nimport CreateTask from \"./components/CreateTask\";\nimport Header from \"./components/Header\";\nimport Note from \"./components/Note\";\n\nfunction App() {\n  const {task,setTask,isLoading,setIsLoading} = useContext(TaskData);\n  \n  //delete the task\n  const deleteHandler=(id)=>{\n    setTask((preVal)=>{\n      return [...preVal.filter((val,idx)=>idx!==id)]\n    })\n  }\n\n  return (\n      <>\n        <Header/>\n        {isLoading && <p>no data</p>}\n        {!isLoading && (\n          <>\n          <CreateTask/>\n          <div className=\"taskList\">\n          {\n            task.map((val,idx)=>{\n              return (\n                <Note\n                  key={idx}\n                  id={idx}\n                  title={val.title}\n                  content={val.content}\n                onDelete={deleteHandler}\n              />\n            )\n          })\n        }  \n        </div> \n\n          </>\n        )} \n       \n      </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}