{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\react\\\\reactread-firebase\\\\src\\\\components\\\\CreateTask.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { TaskData } from \"./Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateTask = () => {\n  _s();\n\n  const {\n    task,\n    setTask\n  } = useContext(TaskData);\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [hideData, isHideData] = useState(false); //to toggle title\n\n  const formHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNote(preValue => {\n      return { ...preValue,\n        [name]: value\n      };\n    });\n  };\n\n  const formSubmit = async e => {\n    e.preventDefault();\n\n    if (note.title === \"\") {\n      alert(\"please add the value\");\n      return false;\n    } else {\n      try {\n        await fetch(\"https://kapse-task-default-rtdb.firebaseio.com/task.json\", {\n          method: \"POST\",\n          body: JSON.stringify(note),\n          headers: {\n            \"content-type\": \"application/json\"\n          }\n        });\n        const response = await fetch(\"https://kapse-task-default-rtdb.firebaseio.com/task.json\");\n        const data = await response.json();\n        let fetchData = [];\n\n        for (let key in data) {\n          fetchData.push(data[key]);\n        }\n\n        console.log(fetchData);\n        setTask(fetchData);\n      } catch (error) {}\n\n      setNote({\n        title: \"\",\n        content: \"\"\n      });\n      isHideData(false);\n    }\n  }; //Title toggle section\n\n\n  const showTitle = () => {\n    isHideData(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmit,\n      children: [hideData && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: note.title,\n        placeholder: \"Title\",\n        name: \"title\",\n        onChange: formHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onClick: showTitle,\n          name: \"content\",\n          value: note.content,\n          placeholder: \"Add a task..\",\n          onChange: formHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateTask, \"T70mHkr1sMWxeqP/wNLmeZDkyv0=\");\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["E:/project/react/reactread-firebase/src/components/CreateTask.jsx"],"names":["React","useContext","useState","TaskData","CreateTask","task","setTask","note","setNote","title","content","hideData","isHideData","formHandler","e","name","value","target","preValue","formSubmit","preventDefault","alert","fetch","method","body","JSON","stringify","headers","response","data","json","fetchData","key","push","console","log","error","showTitle"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { TaskData } from \"./Context\";\r\n\r\nconst CreateTask = () => {\r\n  const { task, setTask } = useContext(TaskData);\r\n\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const [hideData, isHideData] = useState(false); //to toggle title\r\n\r\n  const formHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setNote((preValue) => {\r\n      return {\r\n        ...preValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const formSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (note.title === \"\") {\r\n      alert(\"please add the value\");\r\n      return false;\r\n    } else {\r\n      try {\r\n        await fetch(\r\n          \"https://kapse-task-default-rtdb.firebaseio.com/task.json\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(note),\r\n            headers: { \"content-type\": \"application/json\" },\r\n          }\r\n        );\r\n\r\n        const response = await fetch(\r\n          \"https://kapse-task-default-rtdb.firebaseio.com/task.json\"\r\n        );\r\n        const data = await response.json();\r\n        let fetchData = [];\r\n        for (let key in data) {\r\n          fetchData.push(data[key]);\r\n        }\r\n        console.log(fetchData);\r\n        setTask(fetchData);\r\n      } catch (error) {}\r\n      setNote({\r\n        title: \"\",\r\n        content: \"\",\r\n      });\r\n      isHideData(false);\r\n    }\r\n  };\r\n\r\n  //Title toggle section\r\n  const showTitle = () => {\r\n    isHideData(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formSubmit}>\r\n        {hideData && (\r\n          <input\r\n            type=\"text\"\r\n            value={note.title}\r\n            placeholder=\"Title\"\r\n            name=\"title\"\r\n            onChange={formHandler}\r\n          />\r\n        )}\r\n        <p>\r\n          <textarea\r\n            onClick={showTitle}\r\n            name=\"content\"\r\n            value={note.content}\r\n            placeholder=\"Add a task..\"\r\n            onChange={formHandler}\r\n          ></textarea>\r\n        </p>\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n"]},"metadata":{},"sourceType":"module"}