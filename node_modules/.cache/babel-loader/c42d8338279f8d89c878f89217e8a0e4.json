{"ast":null,"code":"import _asyncToGenerator from\"E:/project/react/reactread-firebase/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"E:/project/react/reactread-firebase/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"E:/project/react/reactread-firebase/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"E:/project/react/reactread-firebase/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"E:\\\\project\\\\react\\\\reactread-firebase\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useContext,useState}from\"react\";import{TaskData}from\"./Context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CreateTask=function CreateTask(){var _useContext=useContext(TaskData),task=_useContext.task,setTask=_useContext.setTask;var _useState=useState({title:\"\",content:\"\"}),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),hideData=_useState4[0],isHideData=_useState4[1];//to toggle title\nvar formHandler=function formHandler(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setNote(function(preValue){return _objectSpread(_objectSpread({},preValue),{},_defineProperty({},name,value));});};var formSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var response,data,fetchData,key;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(note.title===\"\")){_context.next=6;break;}alert(\"please add the value\");return _context.abrupt(\"return\",false);case 6:_context.prev=6;_context.next=9;return fetch(\"https://kapse-task-default-rtdb.firebaseio.com/task.json\",{method:\"POST\",body:JSON.stringify(note),headers:{\"content-type\":\"application/json\"}});case 9:_context.next=11;return fetch(\"https://kapse-task-default-rtdb.firebaseio.com/task.json\");case 11:response=_context.sent;_context.next=14;return response.json();case 14:data=_context.sent;fetchData=[];for(key in data){fetchData.push(data[key]);}console.log(fetchData);setTask(fetchData);_context.next=23;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](6);case 23:setNote({title:\"\",content:\"\"});isHideData(false);case 25:case\"end\":return _context.stop();}}},_callee,null,[[6,21]]);}));return function formSubmit(_x){return _ref.apply(this,arguments);};}();//Title toggle section\nvar showTitle=function showTitle(){isHideData(true);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:formSubmit,children:[hideData&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:note.title,placeholder:\"Title\",name:\"title\",onChange:formHandler}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"textarea\",{onClick:showTitle,name:\"content\",value:note.content,placeholder:\"Add a task..\",onChange:formHandler})}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\"})]})});};export default CreateTask;","map":{"version":3,"sources":["E:/project/react/reactread-firebase/src/components/CreateTask.jsx"],"names":["React","useContext","useState","TaskData","CreateTask","task","setTask","title","content","note","setNote","hideData","isHideData","formHandler","e","target","name","value","preValue","formSubmit","preventDefault","alert","fetch","method","body","JSON","stringify","headers","response","json","data","fetchData","key","push","console","log","showTitle"],"mappings":"ymBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,OAASC,QAAT,KAAyB,WAAzB,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,gBAA0BH,UAAU,CAACE,QAAD,CAApC,CAAQE,IAAR,aAAQA,IAAR,CAAcC,OAAd,aAAcA,OAAd,CAEA,cAAwBJ,QAAQ,CAAC,CAC/BK,KAAK,CAAE,EADwB,CAE/BC,OAAO,CAAE,EAFsB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAKA,eAA+BR,QAAQ,CAAC,KAAD,CAAvC,yCAAOS,QAAP,eAAiBC,UAAjB,eAAgD;AAEhD,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACzB,cAAwBA,CAAC,CAACC,MAA1B,CAAQC,IAAR,WAAQA,IAAR,CAAcC,KAAd,WAAcA,KAAd,CACAP,OAAO,CAAC,SAACQ,QAAD,CAAc,CACpB,sCACKA,QADL,wBAEGF,IAFH,CAEUC,KAFV,GAID,CALM,CAAP,CAMD,CARD,CAUA,GAAME,CAAAA,UAAU,0FAAG,iBAAOL,CAAP,kJACjBA,CAAC,CAACM,cAAF,GADiB,KAEbX,IAAI,CAACF,KAAL,GAAe,EAFF,0BAGfc,KAAK,CAAC,sBAAD,CAAL,CAHe,gCAIR,KAJQ,+CAOPC,CAAAA,KAAK,CACT,0DADS,CAET,CACEC,MAAM,CAAE,MADV,CAEEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAejB,IAAf,CAFR,CAGEkB,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAHX,CAFS,CAPE,+BAgBUL,CAAAA,KAAK,CAC1B,0DAD0B,CAhBf,SAgBPM,QAhBO,sCAmBMA,CAAAA,QAAQ,CAACC,IAAT,EAnBN,SAmBPC,IAnBO,eAoBTC,SApBS,CAoBG,EApBH,CAqBb,IAASC,GAAT,GAAgBF,CAAAA,IAAhB,CAAsB,CACpBC,SAAS,CAACE,IAAV,CAAeH,IAAI,CAACE,GAAD,CAAnB,EACD,CACDE,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EACAzB,OAAO,CAACyB,SAAD,CAAP,CAzBa,yFA2BfrB,OAAO,CAAC,CACNH,KAAK,CAAE,EADD,CAENC,OAAO,CAAE,EAFH,CAAD,CAAP,CAIAI,UAAU,CAAC,KAAD,CAAV,CA/Be,qEAAH,kBAAVO,CAAAA,UAAU,4CAAhB,CAmCA;AACA,GAAMiB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBxB,UAAU,CAAC,IAAD,CAAV,CACD,CAFD,CAIA,mBACE,sCACE,cAAM,QAAQ,CAAEO,UAAhB,WACGR,QAAQ,eACP,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEF,IAAI,CAACF,KAFd,CAGE,WAAW,CAAC,OAHd,CAIE,IAAI,CAAC,OAJP,CAKE,QAAQ,CAAEM,WALZ,EAFJ,cAUE,gCACE,iBACE,OAAO,CAAEuB,SADX,CAEE,IAAI,CAAC,SAFP,CAGE,KAAK,CAAE3B,IAAI,CAACD,OAHd,CAIE,WAAW,CAAC,cAJd,CAKE,QAAQ,CAAEK,WALZ,EADF,EAVF,cAmBE,cAAO,IAAI,CAAC,QAAZ,EAnBF,GADF,EADF,CAyBD,CArFD,CAuFA,cAAeT,CAAAA,UAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { TaskData } from \"./Context\";\r\n\r\nconst CreateTask = () => {\r\n  const { task, setTask } = useContext(TaskData);\r\n\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const [hideData, isHideData] = useState(false); //to toggle title\r\n\r\n  const formHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setNote((preValue) => {\r\n      return {\r\n        ...preValue,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const formSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (note.title === \"\") {\r\n      alert(\"please add the value\");\r\n      return false;\r\n    } else {\r\n      try {\r\n        await fetch(\r\n          \"https://kapse-task-default-rtdb.firebaseio.com/task.json\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(note),\r\n            headers: { \"content-type\": \"application/json\" },\r\n          }\r\n        );\r\n\r\n        const response = await fetch(\r\n          \"https://kapse-task-default-rtdb.firebaseio.com/task.json\"\r\n        );\r\n        const data = await response.json();\r\n        let fetchData = [];\r\n        for (let key in data) {\r\n          fetchData.push(data[key]);\r\n        }\r\n        console.log(fetchData);\r\n        setTask(fetchData);\r\n      } catch (error) {}\r\n      setNote({\r\n        title: \"\",\r\n        content: \"\",\r\n      });\r\n      isHideData(false);\r\n    }\r\n  };\r\n\r\n  //Title toggle section\r\n  const showTitle = () => {\r\n    isHideData(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formSubmit}>\r\n        {hideData && (\r\n          <input\r\n            type=\"text\"\r\n            value={note.title}\r\n            placeholder=\"Title\"\r\n            name=\"title\"\r\n            onChange={formHandler}\r\n          />\r\n        )}\r\n        <p>\r\n          <textarea\r\n            onClick={showTitle}\r\n            name=\"content\"\r\n            value={note.content}\r\n            placeholder=\"Add a task..\"\r\n            onChange={formHandler}\r\n          ></textarea>\r\n        </p>\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTask;\r\n"]},"metadata":{},"sourceType":"module"}