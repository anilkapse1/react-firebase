{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\react\\\\test\\\\test\\\\src\\\\components\\\\CreateTask.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { TaskData } from './Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateTask = () => {\n  _s();\n\n  const {\n    task,\n    setTask\n  } = useContext(TaskData);\n  const [note, setNote] = useState({\n    title: '',\n    content: ''\n  });\n  const [hideData, isHideData] = useState(false); //to toggle title\n\n  const formHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNote(preValue => {\n      return { ...preValue,\n        [name]: value\n      };\n    });\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n\n    if (note.title === '') {\n      alert('please add the value');\n      return false;\n    } else {\n      setTask(preValue => {\n        return [...preValue, note];\n      });\n      setNote({\n        title: '',\n        content: ''\n      });\n      isHideData(false);\n    }\n  }; //to display title section\n\n\n  const showTitle = () => {\n    isHideData(true);\n  }; //Time\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmit,\n      children: [hideData && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: note.title,\n          placeholder: \"Title\",\n          name: \"title\",\n          onChange: formHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 3,\n            children: /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n              label: \"Date desktop\",\n              inputFormat: \"MM/dd/yyyy\",\n              value: value,\n              onChange: handleChange,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onClick: showTitle,\n          name: \"content\",\n          value: note.content,\n          placeholder: \"Add a task..\",\n          onChange: formHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreateTask, \"C16z6B4j6tAECqTI7o2NYGuxj5Y=\");\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["E:/project/react/test/test/src/components/CreateTask.jsx"],"names":["React","useContext","useState","TaskData","CreateTask","task","setTask","note","setNote","title","content","hideData","isHideData","formHandler","e","name","value","target","preValue","formSubmit","preventDefault","alert","showTitle","AdapterDateFns","handleChange","params"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { TaskData } from './Context';\r\n\r\nconst CreateTask = () => {\r\n    const {task, setTask} = useContext(TaskData);\r\n    \r\n    const [note,setNote] = useState({\r\n        title:'',\r\n        content:''\r\n    });\r\n\r\n    const [hideData, isHideData] = useState(false);//to toggle title\r\n\r\n    const formHandler=(e)=>{\r\n        const {name,value} = e.target;\r\n        setNote((preValue)=>{\r\n            return {\r\n                ...preValue,\r\n                [name]:value\r\n            }\r\n        })\r\n    }\r\n\r\n    const formSubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(note.title===''){\r\n            alert('please add the value');\r\n            return false;\r\n        }else{\r\n            setTask((preValue)=>{\r\n                return [...preValue,note]\r\n            })\r\n            setNote({\r\n                title:'',\r\n                content:''\r\n            })\r\n            isHideData(false);\r\n\r\n        }\r\n    }\r\n\r\n    //to display title section\r\n    const showTitle=()=>{\r\n        isHideData(true)\r\n    }\r\n\r\n    //Time\r\n\r\n  return (\r\n    <>\r\n        <form onSubmit={formSubmit}>\r\n        {\r\n            hideData && (\r\n                <>\r\n                <input type='text' value={note.title} placeholder='Title' name=\"title\" onChange={formHandler}/>\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <Stack spacing={3}>\r\n                <DesktopDatePicker\r\n                    label=\"Date desktop\"\r\n                    inputFormat=\"MM/dd/yyyy\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n                </Stack>\r\n                </LocalizationProvider>\r\n                </>\r\n                )\r\n        }\r\n            <p>\r\n                <textarea onClick={showTitle} name=\"content\" value={note.content} placeholder='Add a task..'  onChange={formHandler}>\r\n                </textarea>\r\n            </p>\r\n            <input type='submit'/>\r\n        </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateTask"]},"metadata":{},"sourceType":"module"}