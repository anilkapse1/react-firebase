{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\react\\\\test\\\\test\\\\src\\\\components\\\\Calculate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calculate = () => {\n  _s();\n\n  const ACTIONS = {\n    ADD_TODO: 'add_todo'\n  };\n\n  const reducer = (todo, action) => {\n    switch (action.type) {\n      case ACTIONS.ADD_TODO:\n        return [...todo, {\n          id: Date.now(),\n          name: action.payload.name\n        }];\n    }\n  };\n\n  const [todo, dispatch] = useReducer(reducer, []);\n  const [name, setName] = useState('');\n\n  const fetchVal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setName(value);\n  };\n\n  const formHandler = e => {\n    e.preventDefault();\n    dispatch({\n      type: ACTIONS.ADD_TODO,\n      payload: {\n        name: name\n      }\n    });\n    setName('');\n  }; //console print\n\n\n  console.log(todo);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formHandler,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"todo\",\n        value: name,\n        onChange: fetchVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Calculate, \"DDKxu6hj7jh+y6Fmf1dk70KDtyc=\");\n\n_c = Calculate;\nexport default Calculate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculate\");","map":{"version":3,"sources":["E:/project/react/test/test/src/components/Calculate.js"],"names":["React","useReducer","useState","Calculate","ACTIONS","ADD_TODO","reducer","todo","action","type","id","Date","now","name","payload","dispatch","setName","fetchVal","e","value","target","formHandler","preventDefault","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAMC,OAAO,GAAC;AACVC,IAAAA,QAAQ,EAAC;AADC,GAAd;;AAIA,QAAMC,OAAO,GAAC,CAACC,IAAD,EAAMC,MAAN,KAAe;AACzB,YAAOA,MAAM,CAACC,IAAd;AACI,WAAKL,OAAO,CAACC,QAAb;AACI,eAAO,CAAC,GAAGE,IAAJ,EAAS;AAACG,UAAAA,EAAE,EAACC,IAAI,CAACC,GAAL,EAAJ;AAAeC,UAAAA,IAAI,EAACL,MAAM,CAACM,OAAP,CAAeD;AAAnC,SAAT,CAAP;AAFR;AAIH,GALD;;AAOD,QAAM,CAACN,IAAD,EAAMQ,QAAN,IAAkBd,UAAU,CAACK,OAAD,EAAS,EAAT,CAAlC;AAEC,QAAM,CAACO,IAAD,EAAMG,OAAN,IAAiBd,QAAQ,CAAC,EAAD,CAA/B;;AACA,QAAMe,QAAQ,GAAEC,CAAD,IAAK;AAChB,UAAM;AAACL,MAAAA,IAAD;AAAMM,MAAAA;AAAN,QAAeD,CAAC,CAACE,MAAvB;AACAJ,IAAAA,OAAO,CAACG,KAAD,CAAP;AACH,GAHD;;AAKA,QAAME,WAAW,GAAEH,CAAD,IAAK;AACnBA,IAAAA,CAAC,CAACI,cAAF;AACAP,IAAAA,QAAQ,CAAC;AAACN,MAAAA,IAAI,EAACL,OAAO,CAACC,QAAd;AAAwBS,MAAAA,OAAO,EAAC;AAACD,QAAAA,IAAI,EAACA;AAAN;AAAhC,KAAD,CAAR;AACAG,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAJD,CArBoB,CA2BpB;;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AAEA,sBACA;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEc,WAAhB;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAER,IAAtC;AAA4C,QAAA,QAAQ,EAAEI;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADA;AASH,CAvCD;;GAAMd,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, { useReducer, useState } from 'react'\r\n\r\n\r\nconst Calculate = () => {\r\n\r\n    const ACTIONS={\r\n        ADD_TODO:'add_todo'\r\n    }\r\n\r\n    const reducer=(todo,action)=>{\r\n        switch(action.type){\r\n            case ACTIONS.ADD_TODO:\r\n                return [...todo,{id:Date.now(),name:action.payload.name}]\r\n        }\r\n    }\r\n\r\n   const [todo,dispatch] = useReducer(reducer,[]);\r\n\r\n    const [name,setName] = useState('');\r\n    const fetchVal=(e)=>{\r\n        const {name,value} = e.target;\r\n        setName(value);\r\n    }\r\n\r\n    const formHandler=(e)=>{\r\n        e.preventDefault();\r\n        dispatch({type:ACTIONS.ADD_TODO, payload:{name:name}}) \r\n        setName('');\r\n    }\r\n\r\n    //console print\r\n    console.log(todo);\r\n\r\n    return (\r\n    <>\r\n        <form onSubmit={formHandler}>\r\n            <input type='text' name=\"todo\" value={name} onChange={fetchVal}/>\r\n        </form>\r\n\r\n\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Calculate"]},"metadata":{},"sourceType":"module"}